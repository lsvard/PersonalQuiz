//
//  Question.swift
//  PersonalQuiz
//
//  Created by l.s.vard on 22.08.2023.
//

struct Question {
    let title: String
    let responseType: ResponseType
    let answers: [Answer]
    
    static func getQuestions() -> [Question] {
        [
            Question(
                title: "–ö–∞–∫—É—é –ø–∏—â—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .single,
                answers: [
                    Answer(title: "–°—Ç–µ–π–∫", animal: .dog),
                    Answer(title: "–†—ã–±–∞", animal: .cat),
                    Answer(title: "–ú–æ—Ä–∫–æ–≤—å", animal: .rabbit),
                    Answer(title: "–ö—É–∫—É—Ä—É–∑–∞", animal: .turtle)
                ]
            ),
            Question(
                title: "–ß—Ç–æ –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è?",
                responseType: .multiply,
                answers: [
                    Answer(title: "–ü–ª–∞–≤–∞—Ç—å", animal: .dog),
                    Answer(title: "–°–ø–∞—Ç—å", animal: .cat),
                    Answer(title: "–û–±–Ω–∏–º–∞—Ç—å—Å—è", animal: .rabbit),
                    Answer(title: "–ï—Å—Ç—å", animal: .turtle)
                ]
            ),
            Question(
                title: "–õ—é–±–∏—Ç–µ –ª–∏ –≤—ã –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ –º–∞—à–∏–Ω–µ?",
                responseType: .ranged,
                answers: [
                    Answer(title: "–ù–µ–Ω–∞–≤–∏–∂—É", animal: .cat),
                    Answer(title: "–ù–µ—Ä–≤–Ω–∏—á–∞—é", animal: .turtle),
                    Answer(title: "–ù–µ –∑–∞–º–µ—á–∞—é", animal: .rabbit),
                    Answer(title: "–û–±–æ–∂–∞—é", animal: .dog)
                ]
            )
        ]
    }
}

enum ResponseType {
    case single
    case multiply
    case ranged
}

struct Answer {
    let title: String
    let animal: Animal
}

enum Animal: Character {
    case dog = "üê∂"
    case cat = "üê±"
    case rabbit = "üê∞"
    case turtle = "üê¢"
    
    var definition: String {
        switch self {
        case .dog:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±—ã—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏. –í—ã –æ–∫—Ä—É–∂–∞–µ—Ç–µ —Å–µ–±—è –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å."
        case .cat:
            return "–í—ã —Å–µ–±–µ –Ω–∞ —É–º–µ. –õ—é–±–∏—Ç–µ –≥—É–ª—è—Ç—å —Å–∞–º–∏ –ø–æ —Å–µ–±–µ. –í—ã —Ü–µ–Ω–∏—Ç–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ."
        case .rabbit:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –≤—Å–µ –º—è–≥–∫–æ–µ. –í—ã –∑–¥–æ—Ä–æ–≤—ã –∏ –ø–æ–ª–Ω—ã —ç–Ω–µ—Ä–≥–∏–∏."
        case .turtle:
            return "–í–∞—à–∞ —Å–∏–ª–∞ - –≤ –º—É–¥—Ä–æ—Å—Ç–∏. –ú–µ–¥–ª–µ–Ω–Ω—ã–π –∏ –≤–¥—É–º—á–∏–≤—ã–π –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –±–æ–ª—å—à–∏—Ö –¥–∏—Å—Ç–∞–Ω—Ü–∏—è—Ö."
        }
    }
}

